/* -*-c++-*- */
/* osgEarth - Dynamic map generation toolkit for OpenSceneGraph
 * Copyright 2015 Pelican Mapping
 * http://osgearth.org
 *
 * osgEarth is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */
#ifndef EATRHGLOBAL_ANNOTATIONTOOLBAR_H
#define EATRHGLOBAL_ANNOTATIONTOOLBAR_H 

#include <osgEarthQt/AnnotationDialogs>
#include <osgEarthQt/Common>
#include <osgEarthQt/DataManager>

#include <QAction>
#include <QPointer>
#include <QToolBar>

class AnnotationToolbarEx : public QToolBar
{
  Q_OBJECT

public:
	AnnotationToolbarEx(osg::Group* root, osgEarth::MapNode* mapNode, osgEarth::QtGui::DataManager* dm = 0L, QWidget* parent = 0L);

  void setActiveView(osgViewer::View* view);
  void setActiveViews(const osgEarth::QtGui::ViewVector& views);

signals:
  void annotationCreated(osgEarth::Annotation::AnnotationNode* annotation);

protected slots:
  void addMarkerAnnotation();
  void addPathAnnotation();
  void addPolyAnnotation();
  void addEllipseAnnotation();

  void onAddFinished(int result);

protected:
  void initialize();
  void createDefaultActions();
  void addView(osgViewer::View* view);
  void removeViews();

  osg::ref_ptr<osg::Group>              _root;
  osg::ref_ptr<osgEarth::MapNode>       _mapNode;
  osg::ref_ptr<DataManager>             _manager;
  ViewVector                            _views;

  QAction* _addMarker;
  QAction* _addPath;
  QAction* _addPoly;
  QAction* _addEllipse;

  QPointer<BaseAnnotationDialog>  _activeDialog;
};


#endif // EATRHGLOBAL_ANNOTATIONTOOLBAR_H
